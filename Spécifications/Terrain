Service : Terrain
Use : Bloc
Types : int, Set

Observators :
	const getNbColonnes : [Terrain] -> int
	const getNbLignes : [Terrain] -> int
	getBloc : [Terrain] x int x int -> Bloc
		pre getBloc(T, i, j) require 1 <= i <= getNbLignes() AND 1 <= j <= getNbColonnes()
		
Constructors :
	init : int x int -> [Terrain]
		pre init(i, j) require i >= 6 AND j >= 6
		
Observations :
	[invariant]
		pour tout i de 1 à getNbLignes(T) AND j = 1,
			Bloc::getType(getBloc(T, x, y)) = Bloc::BlocType.MurMetal
		pour tout i de 1 à getNbLignes(T) AND j = getNbColonnes(T),
			Bloc::getType(getBloc(T, x, y)) = Bloc::BlocType.MurMetal
		pour tout j de 1 à getNbColonnes(T) AND i = 1,
			Bloc::getType(getBloc(T, x, y)) = Bloc::BlocType.MurMetal
		pour tout j de 1 à getNbColonnes(T) AND i = getNbLignes(T),
			Bloc::getType(getBloc(T, x, y)) = Bloc::BlocType.MurMetal
		pour tout i de 1 à getNbLignes(T) AND pour tout j de 1 à getNbColonnes(T),
			if i%2 = 1 AND j%2 = 1 then Bloc::getType(getBloc(T, x, y)) = Bloc::BlocType.MurMetal end if
		pour tout i de 1 à getNbLignes(T) AND pour tout j de 1 à getNbColonnes(T),
			if (Bloc::getType(getBloc(T, x, y)) = Bloc::BlocType.MurMetal)
			then
				Bloc::getReward(getBloc(T, x, y)) = Bloc::BlocReward.Rien
			end if
			
	[init]
		getNbColonnes(init(i, j)) = i
		getNbLignes(init(i, j)) = j
		pour tout i de 1 à getNbLignes(T) AND pour tout j de 1 à getNbColonnes(T),
			getBloc(init(i, j), x, y) != null
		pour tout i de 1 à getNbLignes(T) AND j = 1,
			Bloc::getType(getBloc(init(i, j), x, y)) = Bloc::BlocType.MurMetal
		pour tout i de 1 à getNbLignes(T) AND j = getNbColonnes(T),
			Bloc::getType(getBloc(init(i, j), x, y)) = Bloc::BlocType.MurMetal
		pour tout j de 1 à getNbColonnes(T) AND i = 1,
			Bloc::getType(getBloc(init(i, j), x, y)) = Bloc::BlocType.MurMetal
		pour tout j de 1 à getNbColonnes(T) AND i = getNbLignes(T),
			Bloc::getType(getBloc(init(i, j), x, y)) = Bloc::BlocType.MurMetal
		pour tout i de 1 à getNbLignes(T) AND pour tout j de 1 à getNbColonnes(T),
			if i%2 = 1 AND j%2 = 1 then Bloc::getType(getBloc(init(i, j), x, y)) = Bloc::BlocType.MurMetal end if
		pour tout i de 1 à getNbLignes(T) AND pour tout j de 1 à getNbColonnes(T),
			if Bloc::getType(getBloc(init(i, j), x, y)) = Bloc::BlocType.MurMetal then Bloc::getReward(getBloc(init(i, j), x, y)) = Bloc::BlocReward.Rien end if